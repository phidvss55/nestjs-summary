events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;

  upstream backend {
    least_conn; // use the server with the least number of connections
    # ip_hash; // based on the IP address of the client
    # default will use sequence of servers
    server server1:3001;
    server server2:3002; # backup: keyword 'backup' marks the server as a backup
    server server3:3003 backup;
  } 

  server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/certs/key.crt;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    location / {
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }

  server {
    listen 80;
    server_name localhost;

    return 301 https://$host$request_uri; # return back if user request to localhost:8080

    # location / {
    #   proxy_pass http://backend;
    # }
  }
  
}